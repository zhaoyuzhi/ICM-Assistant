# -*- coding: utf-8 -*-
import argparse
import os

# save a list to a txt
def text_save(content, filename, mode = 'a'):
    # try to save a list variable in txt file.
    # Use the following command if Chinese characters are written (i.e., text in the file will be encoded in utf-8)
    file = open(filename, mode, encoding = 'utf-8')
    # file = open(filename, mode)
    for i in range(len(content)):
        file.write(str(content[i]) + '\n')
    file.close()

# read a txt expect EOF
def text_readlines(filename, mode = 'r'):
    # try to read a txt file and return a list.Return [] if there was a mistake.
    try:
        # Use the following command if there is Chinese characters are read
        file = open(filename, mode, encoding = 'utf-8')
        # file = open(filename, mode)
    except IOError:
        error = []
        return error
    content = file.readlines()
    # This for loop deletes the EOF (like \n)
    for i in range(len(content)):
        content[i] = content[i][:len(content[i]) - 1]
    file.close()
    return content

# post-process list generated by MLLM (should have \n)
def post_process(llava_list, name_list):
    post_process_list = []
    temp = ''
    for j in range(len(llava_list)):
        if llava_list[j].split('/')[-1] not in name_list:
            if len(llava_list[j]) > 0:
                temp = temp + llava_list[j] + ' '
        else:
            if temp:
                post_process_list.append(temp.replace('  ', ' ').strip())
                temp = ''
            post_process_list.append(llava_list[j])
    if temp:
        post_process_list.append(temp.strip())
    return post_process_list

# multi-layer folder creation
def check_path(path):
    if not os.path.exists(path):
        os.makedirs(path)

if __name__ == '__main__':

    # --------------------------------------------------
    #       run this after getting all results
    # --------------------------------------------------
    # define the paths
    read_path = 'base_mc'
    save_path = 'result_mc'
    #name_list_path = 'D:\\dataset\\advertisement_data\\ECCV_2024_data\\ECCV_2024_val_v2_eval_reasoning_name_list.txt'
    name_list_path = 'D:\\dataset\\advertisement_data\\ECCV_2024_data\\ECCV_2024_val_v2_name_list.txt'
    file_name = 'llava-v1.6-13b.txt'
    check_path(save_path)

    # read all the files
    gen_list_path = os.path.join(read_path, file_name)
    gen_list = text_readlines(gen_list_path)
    name_list = text_readlines(name_list_path)

    # post-process lists
    save_list = post_process(gen_list, name_list)
    print(len(save_list))
    
    # save the post-processed lists
    save_list_path = os.path.join(save_path, file_name)
    text_save(save_list, save_list_path)
